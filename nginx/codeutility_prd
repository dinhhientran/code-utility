map $http_host $page {
	default codeutility.io;

	codeutility.io /;
	www.codeutility.io /;
	alignhash.codeutility.io align_hash;
	beautifycode.codeutility.io beautify_code;
	beautifyjson.codeutility.io beautify_json;
	beautifyjs.codeutility.io beautify_code/javascript;
	beautifyhtml.codeutility.io beautify_code/html;
	beautifysql.codeutility.io beautify_code/sql;

	html2haml.codeutility.io html2haml;
	html2jsx.codeutility.io html2jsx;
	html2pug.codeutility.io html2pug;
	html2slim.codeutility.io html2slim;
	json2yaml.codeutility.io json2yaml;
	css2scss.codeutility.io css2scss;

	minifycss.codeutility.io minify_css;
	minifyhtml.codeutility.io minify_html;
	minifyjs.codeutility.io minify_javascript;
	minifyjson.codeutility.io minify_json;
	minifysql.codeutility.io minify_sql;

	hexencode.codeutility.io hex_encode;
	base64encode.codeutility.io base64_encode;
	uriencode.codeutility.io uri_encode;
	htmlencode.codeutility.io html_encode;
	md5encrypt.codeutility.io md5_encrypt;
	shaencrypt.codeutility.io sha_encrypt;
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name $page;
    return 301 https://$host$request_uri;
}

server {
	set $base_domain codeutility.io;
	set $app_root /app;

	listen       443 ssl;
    listen [::]:443 ssl;
    server_name  $page;

    ssl_certificate      /app/keystore/codeutility_prd.crt;
    ssl_certificate_key  /app/keystore/codeutitlity_prd.key;

    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  5m;

    ssl_ciphers  HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers  on;

    ssl_protocols TLSv1.2;

	error_page 502 503 = @maintenance;
    error_page 404 = @error_404;

	access_log /app/log/nginx/access.log; 
	error_log /app/log/nginx/error.log;

    location ~* \.(js|jpg|png|css|ico|eot|svg|ttf|woff|woff2|map|txt)$ {
        root  $app_root/public/;
        add_header 'Access-Control-Allow-Origin' "*" always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
    }

	location / {

		if ($page != "/") {
            rewrite ^ /$page$uri break;
        }

        proxy_redirect off;
        proxy_set_header Host $base_domain;
        proxy_set_header Origin $scheme://$base_domain;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Server $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Ssl off; # Optional
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Url-Scheme $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass_header X-CSRF-TOKEN;
        proxy_pass http://127.0.0.1:3000;
        proxy_buffering off;
        proxy_buffer_size 128k;
        proxy_buffers 100 128k;
        proxy_set_header   X-NginX-Proxy  true;
        proxy_read_timeout 120;

        set $cors 'true';

        if ($cors = 'true') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,x-csrf-token' always;
        }

        if ($request_method = 'OPTIONS') {
            # Tell client that this pre-flight info is valid for 20 days
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,x-csrf-token' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    location @maintenance {
        root  $app_root/public/;
        rewrite ^ /maintenance.html break;
    }

    location @error_404 {
        root $app_root/public/;
        rewrite ^ /404.html break;
    }
}